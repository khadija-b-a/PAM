void recupere_fichier(int Col, float **P, char *nom, char **L, char **C);
void matrice_dist(float** distance, float **P, int col, int row);
void centre_alea(int k, int * centre, int row);
int verif_centre(int *centre, int k, int a);
void init_cluster(int * cluster, int row);
void def_cluster(int *cluster, int *centre, int k, int row, float ** distance);
int diff_centre(int* centre, int* nouv_centre, int k);
float cout(int i, float** distance,int row, int* cluster);
int meilleur_changement(int S, int i, float** distance,int row, int* cluster);
void afficher_donnees(int Row, int Col, float **P);
void affiche_distance(float** distance, int row);
void affiche_cluster(int * cluster, int row, int k, char **L, int nbaff);
void affiche_centre(int * centre, int k, char **L);
float moy_tab(float** p, int row,int i);
float ecart_type(float **p, int row, int i, float moy);
void centrer_reduire_donnee(float **p, int row, int col);
void utilisateur_donnees(float **p, int row, int col);
void free_tab(float**p, int row);
void free_char(char**p, int row);
void fichier_distance( float** distance, int row);
void fichier_cluster(int *centre, int *cluster, int row, int k);
void affiche_chif_clust(int*cluster, int row);
void affiche_chif_centre(int* centre, int k);